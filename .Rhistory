mean(x)
mean(mm)
mean(x) #parámetro
mean(mm) #
hist(mm)
hist(mm)
N<-500
set.seed(855)
x<-rnorm(500, 4,1.2)
x
x<-round(x,1)
x
x
x
n<-40
choose(N,n)
format(choose(N,n),scientific = F)
ss
format(choose(N,n),scientific = F)
choose(N,n)
(1000/choose(N,n))*100
sample(x,n)
x
sample(x,n)
sample(x,n)
sample(x,n)
```{r}
k<-1000 # parte de las muestras posibles
sample(x,n)
```
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
sample(x,n)
maux<-sample(x,n)
maux
mean(maux)
maux<-sample(x,n)
maux
mean(maux)
maux
maux<-sample(x,n)
maux
mean(maux)
mm<-NULL
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:1000){
maux<-sample(x,n)
mm[i]<-mean(maux)
}
mm
x<-c(2,4,5,5,2,10,15,7,4,2)
n<-4
choose(10,4)
ss<-combn(x,4)
ss
#distribución de la media
mm<-apply(ss,2,mean)
mm
N<-500
set.seed(855)
x<-rnorm(500, 4,1.2)
x<-round(x,1)
x
n<-40
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:1000){
maux<-sample(x,n)
mm[i]<-mean(maux)
}
mm
hist(mm)
x
mean(x)
abline(v=mean(x))
abline(v=mean(x),col="red")
abline(v=mean(x),col="red",lwd=2)
x
x-mean(x)
(x-mean(x))^2
sum((x-mean(x))^2)
sum((x-mean(x))^2)/N
vx<-sum((x-mean(x))^2)/N
curve(x,mean(x),sqrt(vx/n))
curve(dnorm(x,mean(x),sqrt(vx/n)))
x
dnorm(x,mean(x),sqrt(vx/n))
norm(x,mean(x),sqrt(vx/n))
curve(norm(x,mean(x),sqrt(vx/n)))
curve(dnorm(x,mean(x),sqrt(vx/n)))
dnorm
?dnorm
curve(dnorm(y,mean(x),sqrt(vx/n)))
curve(dnorm(x,mean(x),sqrt(vx/n)))
rm(x)
curve(dnorm(x,mean(x),sqrt(vx/n)))
rm(x)
curve(dnorm(x,mean(x),sqrt(vx/n)))
N<-500
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(x,1)
xx
n<-40
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:1000){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
hist(mm)
abline(v=mean(x),col="red",lwd=2)
abline(v=mean(xx),col="red",lwd=2)
vx<-sum((xx-mean(xx))^2)/N
rm(x)
curve(dnorm(x,mean(xx),sqrt(vx/n)))
curve(dnorm(x,mean(xx),sqrt(vx/n)),add = T)
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(-5,5),add = T)
dev.off()
dev.off()
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(-5,5),add = T)
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(2,6),add = T)
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(2,6))
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(3,5))
hist(mm,xlim = c(3,5))
# la distribución teórica
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(3,5))
# de forma gráfica
?hist(mm,xlim = c(3,5))
# de forma gráfica
hist(mm,xlim = c(3,5))
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red")
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
k<-5000 # parte de las muestras posibles
mm<-NULL
for(i in 1:1000){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
k<-5000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
vx<-sum((xx-mean(xx))^2)/N
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
N<-500
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(x,1)
xx
N<-500
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(xx,1)
xx
n<-10
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
N<-500
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(xx,1)
xx
n<-20
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
N<-500
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(xx,1)
xx
n<-30
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
hist(mm,xlim = c(3,5))
abline(v=mean(xx),col="red",lwd=2)
vx<-sum((xx-mean(xx))^2)/N
# la distribución teórica
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(3,5))
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
n<-80
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
N<-500
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(xx,1)
xx
n<-40
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
hist(mm,xlim = c(3,5))
abline(v=mean(xx),col="red",lwd=2)
vx<-sum((xx-mean(xx))^2)/N
# la distribución teórica
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(3,5))
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
N<-50000
set.seed(855)
xx<-rnorm(500, 4,1.2)
xx<-round(xx,1)
xx
N<-50000
set.seed(855)
xx<-rnorm(N, 4,1.2)
xx<-round(xx,1)
xx
n<-40
format(choose(N,n),scientific = F)# muestras posibles
k<-1000 # parte de las muestras posibles
mm<-NULL
for(i in 1:k){
maux<-sample(xx,n)
mm[i]<-mean(maux)
}
mm
hist(mm,xlim = c(3,5))
abline(v=mean(xx),col="red",lwd=2)
vx<-sum((xx-mean(xx))^2)/N
# la distribución teórica
curve(dnorm(x,mean(xx),sqrt(vx/n)),xlim = c(3,5))
# de forma gráfica
hist(mm,xlim = c(3,5),freq = F)
curve(dnorm(x,mean(xx),sqrt(vx/n)),add=T,col="red",lwd=2)
ss
sample(xx,40)
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
x<-c(4.0, 4.3, 4.5, 4.6, 4.7, 4.8, 4.9, 4.9, 5.1)
x
sum(x)
41.8/9
mean(x)
var(x)
0.1153/9
sqrt(0.1153/9)
2.58*sqrt(89.06/24)
2.58*sqrt(89.06/24)
2.58*sqrt(89.06/24)
61.4-4.97
61.4+4.97
1.96*sqrt(89.06/24)
61.4-3.78
61.4+3.78
1.64*sqrt(89.06/24)
61.4-3.16
61.4+3.16
x<-round(rnorm(24,61.4,sqrt(89.06)),1)
x
sum(x)/24
# mayores de 4 años
y<-rbinom(24,1,0.6)
y
sum(y)
14/24
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
14/24
14/24
(14/24)*100
10/24
12/35
1.96*sqrt(((12/35)*(23/35))/35))
1.96*sqrt(((12/35)*(23/35))/35)))
1.96*sqrt(((12/35)*(23/35))/35)
0.34-0.16
0.34+0.16
12/35
0.18*200
0.5*200
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
31/45
31/45
14/45
1.96*sqrt((0.69*0.31)/45)
round(1.96*sqrt((0.69*0.31)/45),2)
0.69-0.14
0.69+0.14
0.31-0.14
0.31+0.14
0.17*7000
0.45*7000
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?lm
require(graphics)
## Annette Dobson (1990) "An Introduction to Generalized Linear Models".
## Page 9: Plant Weight Data.
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
anova(lm.D9)
summary(lm.D90)
require(graphics)
## Annette Dobson (1990) "An Introduction to Generalized Linear Models".
## Page 9: Plant Weight Data.
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
anova(lm.D9)
summary(lm.D90)
curve(dnorm(x),xlim = c(-4,4))
abline(v=c(-1,64,1.64))
# alpha=0.1 (10%)
curve(dnorm(x),xlim = c(-4,4))
# alpha=0.1 (10%)
curve(dnorm(x),xlim = c(-4,4))
abline(v=c(-1.64,1.64))
text(c(-3.5,3.5),rep(0.2,3),c("Rechazo","Acpetación","Rechazo"))
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Acpetación","Rechazo"))
# alpha=0.1 (10%)
curve(dnorm(x),xlim = c(-4,4))
abline(v=c(-1.64,1.64))
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Acpetación","Rechazo"))
# alpha=0.1 (10%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 10%")
abline(v=c(-1.64,1.64))
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Acpetación","Rechazo"))
# alpha=0.1 (10%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 10%")
abline(v=c(-1.64,1.64),col="red",lty=2)
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Acpetación","Rechazo"))
# alpha=0.1 (10%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 10%")
abline(v=c(-1.64,1.64),col="red",lty=2)
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Aceptación","Rechazo"))
# alpha=0.05 (5%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 5%")
abline(v=c(-1.96,1.96),col="red",lty=2)
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Aceptación","Rechazo"))
# alpha=0.01 (1%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 1%")
abline(v=c(-2.58,2.58),col="red",lty=2)
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Aceptación","Rechazo"))
0.01/2
x<-round(runif(20,45,75))
set.seed(905)
x<-round(runif(20,45,75))
x
x
set.seed(905)
x<-round(runif(20,45,75))
x
x
sum(x)/20
(61.5-65)/(10/sqrt(20))
# alpha=0.05 (5%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 5%")
abline(v=c(-1.96,1.96),col="red",lty=2)
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Aceptación","Rechazo"))
abline(v=-1.565,col="blue",lty=3)
text(x=-1.565,y=0.1,"Z0")
# alpha=0.05 (5%)
curve(dnorm(x),xlim = c(-4,4),main="Significancia al 5%")
abline(v=c(-1.96,1.96),col="red",lty=2)
text(c(-3.5,0,3.5),rep(0.2,3),c("Rechazo","Aceptación","Rechazo"))
abline(v=-1.565,col="blue",lty=3)
text(x=-1.565,y=0.05,"Z0")
curve(dnorm(x),xlim = c(-4,4),main="Pruebas unilaterales <")
abline(v=c(-1.28,-1.64,-2.33),col="red",lty=2)
text(c(-3.5,2),rep(0.2,2),c("Rechazo","Aceptación"))
text(c(-1.28,-1.64,-2.33),y=0.3,c("10%","5%","1%"))
text(c(-1.28,-1.64,-2.33),y=0.3,c("10%","5%","1%"),cex=0.7)
curve(dnorm(x),xlim = c(-4,4),main="Pruebas unilaterales <")
abline(v=c(-1.28,-1.64,-2.33),col="red",lty=2)
text(c(-3.5,2),rep(0.2,2),c("Rechazo","Aceptación"))
text(c(-1.28,-1.64,-2.33),y=0.3,c("10%","5%","1%"),cex=0.7)
curve(dnorm(x),xlim = c(-4,4),main="Pruebas unilaterales <")
abline(v=c(-1.28,-1.64,-2.33),col="red",lty=2)
text(c(-3.5,2),rep(0.2,2),c("Rechazo","Aceptación"))
text(c(-1.28,-1.64,-2.33),y=0.3,c("10%","5%","1%"),cex=0.8)
# ">"
curve(dnorm(x),xlim = c(-4,4),main="Pruebas unilaterales >")
abline(v=c(1.28,1.64,2.33),col="red",lty=2)
text(c(3.5,2),rep(0.2,2),c("Rechazo","Aceptación"))
# ">"
curve(dnorm(x),xlim = c(-4,4),main="Pruebas unilaterales >")
abline(v=c(1.28,1.64,2.33),col="red",lty=2)
text(c(-2,3.5),rep(0.2,2),c("Rechazo","Aceptación"))
text(c(-2,3.5),rep(0.2,2),c("Aceptación","Rechazo"))
# ">"
curve(dnorm(x),xlim = c(-4,4),main="Pruebas unilaterales >")
abline(v=c(1.28,1.64,2.33),col="red",lty=2)
text(c(-2,3.5),rep(0.2,2),c("Aceptación","Rechazo"))
text((-1)*c(-1.28,-1.64,-2.33),y=0.3,c("10%","5%","1%"),cex=0.8)
curve(dt(x),xlim=c(-4,1))
curve(dt(x,10),xlim=c(-4,1))
curve(dt(x,10),xlim=c(-4,4))
curve(dt(x,10),xlim=c(-4,4),lty=2)
curve(dt(x,10),xlim=c(-4,4),lty=2,col="red")
curve(dnorm(x),xlim=c(-4,4))
curve(dt(x,10),xlim=c(-4,4),lty=2,col="red",add=T)
curve(dnorm(x),xlim=c(-4,4))
for(i in 1:30){
curve(dt(x,i),xlim=c(-4,4),lty=2,col="red",add=T)
}
curve(dnorm(x),xlim=c(-4,4),lwd=2)
curve(dnorm(x),xlim=c(-4,4),lwd=2)
for(i in 1:30){
curve(dt(x,i),xlim=c(-4,4),lty=2,col="red",add=T)
}
x<-c(4.5, 6.7, 5.0, 4.0, 6.1)
x<-c(4.5, 6.7, 5.0, 4.0, 6.1)
x
mean(x)
var(x)
sqrt(var(x))
(5.26-4.2)/(1.12/sqrt(5))
x<-c(140, 200, 178, 167, 170, 180, 192)
mean(x)
var(x)
sqrt(var(x))
(175.29-175)/(19.41/sqrt(7))
(1.96*19.41/5)^2
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
1.57*(1.64+1.28)^2
1.57*(1.64+1.28)^2
((19.41*(1.64+0.84))/5)^2
((19.41*(1.64+0.84))/5)^2
((19.41*(1.64+0.84))/50)^2
((19.41*(1.64+0.84))/25)^2
((19.41*(1.64+0.84))/5)^2
((19.41*(1.64+0.84))/1)^2
((19.41*(1.64+0.84))/0.1)^2
((19.41*(1.64+0.84))/2)^2
((19.41*(1.64+0.84))/5)^2
5/19.41
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::clean_book(TRUE)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
